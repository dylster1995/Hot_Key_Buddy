[{"C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\index.js":"1","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\App.js":"2","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Home.js":"3","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Tabs.js":"4","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Keyboard.js":"5","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Footer.js":"6","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Signup.js":"7","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Login.js":"8","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\utils\\auth.js":"9","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\utils\\mutations.js":"10"},{"size":266,"mtime":1671318736106,"results":"11","hashOfConfig":"12"},{"size":1671,"mtime":1671450534702,"results":"13","hashOfConfig":"12"},{"size":1913,"mtime":1671459966572,"results":"14","hashOfConfig":"12"},{"size":642,"mtime":1671445337210,"results":"15","hashOfConfig":"12"},{"size":1013,"mtime":1671457727526,"results":"16","hashOfConfig":"12"},{"size":378,"mtime":1671432736958,"results":"17","hashOfConfig":"12"},{"size":1171,"mtime":1671425102470,"results":"18","hashOfConfig":"12"},{"size":2887,"mtime":1671429544458,"results":"19","hashOfConfig":"12"},{"size":1245,"mtime":1671425102473,"results":"20","hashOfConfig":"12"},{"size":1310,"mtime":1671425102474,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"17rkv7g",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\index.js",[],["46","47"],"C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\App.js",["48","49"],"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink, } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Login from './components/Login';\nimport Tabs from './components/Tabs';\nimport Home from './components/Home';\nimport Keyboard from './components/Keyboard';\nimport Footer from './components/Footer';\nimport Signup from './components/Signup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Tabs />\n          <Routes>\n            <Route path=\"/home\" element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/keyboard\" element={<Keyboard />} />\n            <Route path=\"/signup\" element={<Signup />} />\n          </Routes>\n          <Footer />\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Home.js",[],"C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Tabs.js",[],"C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Keyboard.js",[],"C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Footer.js",[],"C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Signup.js",["50"],"import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport \"../styles/Login.css\"\n\nconst Signup = () => {\n  \n  return (\n    <>\n    <div className=\"login-form\">\n      <Form>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n      </Form.Group>\n      <Button variant=\"info\" type=\"submit\">\n        Sign Up!\n      </Button>\n      <br></br>\n      <p>Already have an account?</p>\n      <Button variant=\"info\" type=\"submit\">\n        Sign In\n      </Button>\n    </Form>\n    </div>\n    </>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\components\\Login.js",["51"],"import React, { useState, useEffect} from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport \"../styles/Login.css\"\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Login = () => {\n\n  const [userData, setUserData] = useState({email: '', password: ''})\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({\n        variables: { ...userData },\n      });\n\n      console.log(data);\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setUserData({\n      email: '',\n      password: '',\n    });\n  };\n  \n  return (\n    <>\n    <div className=\"login-form\">\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label htmlFor=\"email\">Email address</Form.Label>\n        <Form.Control  \n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userData.email}\n            required />\n        {/* <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text> */}\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label htmlFor=\"password\">Password</Form.Label>\n        <Form.Control   \n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userData.password}\n            required/>\n      </Form.Group>\n      {/* <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n        {/* <Form.Check type=\"checkbox\" label=\"Check me out\" /> */}\n      {/* </Form.Group> */} \n      <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n      <Button  \n      disabled={!(userData.email && userData.password)}\n        variant=\"info\" type=\"submit\">\n        Submit\n      </Button>\n      <br></br>\n      <Button variant=\"info\" type=\"submit\">\n        Create Account\n      </Button>\n    </Form>\n    </div>\n    </>\n  );\n};\n\nexport default Login;\n","C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\utils\\auth.js",[],"C:\\Users\\janto\\Documents\\homework\\Hot_Key_Buddy\\client\\src\\utils\\mutations.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":15,"column":7,"nodeType":"58","messageId":"59","endLine":15,"endColumn":15},{"ruleId":"56","severity":1,"message":"60","line":20,"column":7,"nodeType":"58","messageId":"59","endLine":20,"endColumn":15},{"ruleId":"56","severity":1,"message":"61","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"62","line":13,"column":10,"nodeType":"58","messageId":"59","endLine":13,"endColumn":19},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'httpLink' is assigned a value but never used.","Identifier","unusedVar","'authLink' is assigned a value but never used.","'useState' is defined but never used.","'showAlert' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]